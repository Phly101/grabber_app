// // Mocks generated by Mockito 5.4.6 from annotations
// // in grabber_app/test/gift_bloc_test.dart.
// // Do not manually edit this file.
//
// // ignore_for_file: no_leading_underscores_for_library_prefixes
// import "dart:async" as _i6;
//
// import "package:cloud_firestore/cloud_firestore.dart" as _i2;
// import "package:firebase_auth/firebase_auth.dart" as _i3;
// import "package:grabber_app/Services/sendGift/Models/gift_model.dart" as _i8;
// import "package:grabber_app/Services/sendGift/Models/notification_model.dart"
//     as _i7;
// import "package:grabber_app/Services/sendGift/Service/gift_listener_service.dart"
//     as _i5;
// import "package:grabber_app/Services/sendGift/Service/result.dart" as _i4;
// import "package:grabber_app/Services/sendGift/Service/send_gift_service.dart"
//     as _i9;
// import "package:mockito/mockito.dart" as _i1;
//
//
//
// class _FakeFirebaseFirestore_0 extends _i1.SmartFake
//     implements _i2.FirebaseFirestore {
//   _FakeFirebaseFirestore_0(Object parent, Invocation parentInvocation)
//     : super(parent, parentInvocation);
// }
//
// class _FakeFirebaseAuth_1 extends _i1.SmartFake implements _i3.FirebaseAuth {
//   _FakeFirebaseAuth_1(Object parent, Invocation parentInvocation)
//     : super(parent, parentInvocation);
// }
//
// class _FakeResult_2<T> extends _i1.SmartFake implements _i4.Result<T> {
//   _FakeResult_2(Object parent, Invocation parentInvocation)
//     : super(parent, parentInvocation);
// }
//
// class _FakeQuerySnapshot_3<T extends Object?> extends _i1.SmartFake
//     implements _i2.QuerySnapshot<T> {
//   _FakeQuerySnapshot_3(Object parent, Invocation parentInvocation)
//     : super(parent, parentInvocation);
// }
//
// /// A class which mocks [GiftListenerService].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockGiftListenerService extends _i1.Mock
//     implements _i5.GiftListenerService {
//   MockGiftListenerService() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i2.FirebaseFirestore get fireStore =>
//       (super.noSuchMethod(
//             Invocation.getter(#fireStore),
//             returnValue: _FakeFirebaseFirestore_0(
//               this,
//               Invocation.getter(#fireStore),
//             ),
//           )
//           as _i2.FirebaseFirestore);
//
//   @override
//   _i3.FirebaseAuth get authProvider =>
//       (super.noSuchMethod(
//             Invocation.getter(#authProvider),
//             returnValue: _FakeFirebaseAuth_1(
//               this,
//               Invocation.getter(#authProvider),
//             ),
//           )
//           as _i3.FirebaseAuth);
//
//   @override
//   _i6.Stream<List<_i7.NotificationModel>> listenToNotifications(
//     String? userId,
//   ) =>
//       (super.noSuchMethod(
//             Invocation.method(#listenToNotifications, [userId]),
//             returnValue: const _i6.Stream<List<_i7.NotificationModel>>.empty(),
//           )
//           as _i6.Stream<List<_i7.NotificationModel>>);
//
//   @override
//   _i6.Stream<List<_i8.GiftModel>> listenToIncomingGifts(String? userId) =>
//       (super.noSuchMethod(
//             Invocation.method(#listenToIncomingGifts, [userId]),
//             returnValue: const _i6.Stream<List<_i8.GiftModel>>.empty(),
//           )
//           as _i6.Stream<List<_i8.GiftModel>>);
//
//   @override
//   _i6.Future<_i4.Result<List<_i7.NotificationModel>>> getNotifications(
//     String? userId,
//   ) =>
//       (super.noSuchMethod(
//             Invocation.method(#getNotifications, [userId]),
//             returnValue:
//                 _i6.Future<_i4.Result<List<_i7.NotificationModel>>>.value(
//                   _FakeResult_2<List<_i7.NotificationModel>>(
//                     this,
//                     Invocation.method(#getNotifications, [userId]),
//                   ),
//                 ),
//           )
//           as _i6.Future<_i4.Result<List<_i7.NotificationModel>>>);
//
//   @override
//   _i6.Future<_i4.Result<_i8.GiftModel>> getGift(
//     String? userId,
//     String? giftId,
//   ) =>
//       (super.noSuchMethod(
//             Invocation.method(#getGift, [userId, giftId]),
//             returnValue: _i6.Future<_i4.Result<_i8.GiftModel>>.value(
//               _FakeResult_2<_i8.GiftModel>(
//                 this,
//                 Invocation.method(#getGift, [userId, giftId]),
//               ),
//             ),
//           )
//           as _i6.Future<_i4.Result<_i8.GiftModel>>);
// }
//
// /// A class which mocks [SendGiftService].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockSendGiftService extends _i1.Mock implements _i9.SendGiftService {
//   MockSendGiftService() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i2.FirebaseFirestore get fireStore =>
//       (super.noSuchMethod(
//             Invocation.getter(#fireStore),
//             returnValue: _FakeFirebaseFirestore_0(
//               this,
//               Invocation.getter(#fireStore),
//             ),
//           )
//           as _i2.FirebaseFirestore);
//
//   @override
//   _i3.FirebaseAuth get authProvider =>
//       (super.noSuchMethod(
//             Invocation.getter(#authProvider),
//             returnValue: _FakeFirebaseAuth_1(
//               this,
//               Invocation.getter(#authProvider),
//             ),
//           )
//           as _i3.FirebaseAuth);
//
//   @override
//   _i6.Future<_i4.Result<void>> sendGift(String? receiverEmail) =>
//       (super.noSuchMethod(
//             Invocation.method(#sendGift, [receiverEmail]),
//             returnValue: _i6.Future<_i4.Result<void>>.value(
//               _FakeResult_2<void>(
//                 this,
//                 Invocation.method(#sendGift, [receiverEmail]),
//               ),
//             ),
//           )
//           as _i6.Future<_i4.Result<void>>);
//
//   @override
//   _i6.Future<_i2.QuerySnapshot<Object?>> findUserByEmail(String? email) =>
//       (super.noSuchMethod(
//             Invocation.method(#findUserByEmail, [email]),
//             returnValue: _i6.Future<_i2.QuerySnapshot<Object?>>.value(
//               _FakeQuerySnapshot_3<Object?>(
//                 this,
//                 Invocation.method(#findUserByEmail, [email]),
//               ),
//             ),
//           )
//           as _i6.Future<_i2.QuerySnapshot<Object?>>);
// }
